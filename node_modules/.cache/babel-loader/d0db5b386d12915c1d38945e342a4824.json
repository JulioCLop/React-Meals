{"ast":null,"code":"var _jsxFileName = \"/Users/juliolopez/Downloads/01-starting-project 3/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 1\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/juliolopez/Downloads/01-starting-project 3/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AAEA,UAAMC,YAAY,GAAGP,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBP,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACHP,MAAAA,KAAK,EAAEU,YADJ;AAEHT,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAIH;;AACA,SAAOP,gBAAP;AACJ,CAXD;;AAcA,MAAMa,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAE7B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEG,QAAMiB,oBAAoB,GAAGT,IAAI,IAAI;AAClCQ,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACF,GAFD;;AAGA,QAAMU,yBAAyB,GAAGC,EAAE,IAAI;AACpCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,QAAN;AAAgBa,MAAAA,EAAE,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIJ,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBmB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACA,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADA;AAKC,CAvBD;;GAAMV,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import { useReducer}  from 'react';\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    if(action.type === 'ADD'){\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        \n        const updatedItems = state.items.concat(action.item);\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        }\n    }\n     return defaultCartState;\n};\n\n\nconst CartProvider = props => {\n\n const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = item => {\n       dispatchCartAction({type: 'ADD', item: item})\n    };\n    const removeItemFromCartHandler = id => {\n        dispatchCartAction({type:'REMOVE', id: id})\n    };\n\nconst cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler ,\n    removeItem: removeItemFromCartHandler\n};\n\nreturn (\n<CartContext.Provider value={cartContext}>\n    {props.children}\n</CartContext.Provider>\n)\n};\n\n\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}